---
pipeline:

  build:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker build -t ref-data-api:$${DRONE_COMMIT_SHA} .
    when:
      event: push

  unit_tests:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker run -t ref-data-api:$${DRONE_COMMIT_SHA} sh -c "npm run test"
    when:
      event: push

  lint_checks:
    image: quay.io/ukhomeofficedigital/drone-docker
    commands:
      - docker run -t ref-data-api:$${DRONE_COMMIT_SHA} sh -c "npm run lint -- app/"
    when:
      event: push

  synch_dev_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
    secrets:
      - source: DEV_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: DEV_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      branch: master
      event: push

  synch_staging_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
    secrets:
      - source: STAGING_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: STAGING_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      event: deployment
      environment: staging

  synch_production_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
    secrets:
      - source: PRODUCTION_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: PRODUCTION_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      event: deployment
      environment: production

  image_to_quay:
    image: quay.io/ukhomeofficedigital/drone-docker
    secrets:
    - source: QUAY_USERNAME
      target: DOCKER_USERNAME
    - source: QUAY_PASSWORD
      target: DOCKER_PASSWORD
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/ref-data-api
    tags: ${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: push

  deploy_to_dev:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - DEV_NGINX_IMAGE
      - DEV_NGINX_TAG
      - DEV_KUBE_SERVER
      - DEV_KUBE_TOKEN
      - DEV_KEYCLOAK_URL
      - DEV_KEYCLOAK_REALM
      - DEV_KEYCLOAK_PROTOCOL
      - DEV_API_REF_NAME
      - DEV_API_REF_IMAGE
      - DEV_API_REF_KEYCLOAK_CLIENT_ID
      - DEV_API_REF_KUBE_NAMESPACE
      - DEV_API_REF_LOG_LEVEL
      - DEV_API_REF_URL
      - DEV_API_REF_PORT
      - DEV_API_REF_LIMIT_ROWS
      - DEV_DB_REF_PROTOCOL
      - DEV_DB_REF_PORT
      - DEV_DB_REF_HOSTNAME
      - DEV_DB_REF_OPTIONS
      - DEV_DB_REF_REFERENCE_DBNAME
      - DEV_DB_REF_REFERENCE_SCHEMA
      - DEV_DB_REF_REFERENCE_AUTHENTICATOR_USERNAME
      - DEV_DB_REF_REFERENCE_AUTHENTICATOR_PASSWORD
    commands:
      - export NGINX_IMAGE=$${DEV_NGINX_IMAGE}
      - export NGINX_TAG=$${DEV_NGINX_TAG}
      - export KUBE_NAMESPACE=$${DEV_API_REF_KUBE_NAMESPACE}
      - export KUBE_SERVER=$${DEV_KUBE_SERVER}
      - export KUBE_TOKEN=$${DEV_KUBE_TOKEN}
      - export KEYCLOAK_URL=$${DEV_KEYCLOAK_URL}
      - export KEYCLOAK_REALM=$${DEV_KEYCLOAK_REALM}
      - export KEYCLOAK_PROTOCOL=$${DEV_KEYCLOAK_PROTOCOL}
      - export API_REF_NAME=$${DEV_API_REF_NAME}
      - export API_REF_KEYCLOAK_CLIENT_ID=$${DEV_API_REF_KEYCLOAK_CLIENT_ID}
      - export API_REF_LOG_LEVEL=$${DEV_API_REF_LOG_LEVEL}
      - export API_REF_PORT=$${DEV_API_REF_PORT}
      - export LIMIT_ROWS=$${DEV_API_REF_LIMIT_ROWS}
      - export API_REF_URL=$${DEV_API_REF_URL}
      - export DB_REF_PROTOCOL=$${DEV_DB_REF_PROTOCOL}
      - export DB_REF_PORT=$${DEV_DB_REF_PORT}
      - export DB_REF_HOSTNAME=$${DEV_DB_REF_HOSTNAME}
      - export DB_REF_OPTIONS=$${DEV_DB_REF_OPTIONS}
      - export DB_REF_REFERENCE_DBNAME=$${DEV_DB_REF_REFERENCE_DBNAME}
      - export DB_REF_REFERENCE_SCHEMA=$${DEV_DB_REF_REFERENCE_SCHEMA}
      - export DB_REF_REFERENCE_AUTHENTICATOR_USERNAME=$${DEV_DB_REF_REFERENCE_AUTHENTICATOR_USERNAME}
      - export DB_REF_REFERENCE_AUTHENTICATOR_PASSWORD=$${DEV_DB_REF_REFERENCE_AUTHENTICATOR_PASSWORD}
      - export API_REF_IMAGE=$${DEV_API_REF_IMAGE}
      - export API_REF_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/secret.yml -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml
    when:
      branch: master
      event: push

  deploy_to_staging:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - STAGING_NGINX_IMAGE
      - STAGING_NGINX_TAG
      - STAGING_KUBE_SERVER
      - STAGING_KUBE_TOKEN
      - STAGING_API_REF_KUBE_NAMESPACE
      - STAGING_KEYCLOAK_URL
      - STAGING_KEYCLOAK_REALM
      - STAGING_KEYCLOAK_PROTOCOL
      - STAGING_API_REF_NAME
      - STAGING_API_REF_KEYCLOAK_CLIENT_ID
      - STAGING_API_REF_LOG_LEVEL
      - STAGING_API_REF_PORT
      - STAGING_API_REF_URL
      - STAGING_API_REF_LIMIT_ROWS
      - STAGING_DB_REF_PROTOCOL
      - STAGING_DB_REF_PORT
      - STAGING_DB_REF_HOSTNAME
      - STAGING_DB_REF_OPTIONS
      - STAGING_DB_REF_REFERENCE_DBNAME
      - STAGING_DB_REF_REFERENCE_SCHEMA
      - STAGING_DB_REF_REFERENCE_AUTHENTICATOR_USERNAME
      - STAGING_DB_REF_REFERENCE_AUTHENTICATOR_PASSWORD
      - STAGING_API_REF_IMAGE
    commands:
      - export NGINX_IMAGE=$${STAGING_NGINX_IMAGE}
      - export NGINX_TAG=$${STAGING_NGINX_TAG}
      - export KUBE_NAMESPACE=$${STAGING_API_REF_KUBE_NAMESPACE}
      - export KUBE_SERVER=$${STAGING_KUBE_SERVER}
      - export KUBE_TOKEN=$${STAGING_KUBE_TOKEN}
      - export KEYCLOAK_URL=$${STAGING_KEYCLOAK_URL}
      - export KEYCLOAK_REALM=$${STAGING_KEYCLOAK_REALM}
      - export KEYCLOAK_PROTOCOL=$${STAGING_KEYCLOAK_PROTOCOL}
      - export API_REF_NAME=$${STAGING_API_REF_NAME}
      - export API_REF_KEYCLOAK_CLIENT_ID=$${STAGING_API_REF_KEYCLOAK_CLIENT_ID}
      - export API_REF_LOG_LEVEL=$${STAGING_API_REF_LOG_LEVEL}
      - export API_REF_PORT=$${STAGING_API_REF_PORT}
      - export API_REF_URL=$${STAGING_API_REF_URL}
      - export LIMIT_ROWS=$${STAGING_API_REF_LIMIT_ROWS}
      - export DB_REF_PROTOCOL=$${STAGING_DB_REF_PROTOCOL}
      - export DB_REF_PORT=$${STAGING_DB_REF_PORT}
      - export DB_REF_HOSTNAME=$${STAGING_DB_REF_HOSTNAME}
      - export DB_REF_OPTIONS=$${STAGING_DB_REF_OPTIONS}
      - export DB_REF_REFERENCE_DBNAME=$${STAGING_DB_REF_REFERENCE_DBNAME}
      - export DB_REF_REFERENCE_SCHEMA=$${STAGING_DB_REF_REFERENCE_SCHEMA}
      - export DB_REF_REFERENCE_AUTHENTICATOR_USERNAME=$${STAGING_DB_REF_REFERENCE_AUTHENTICATOR_USERNAME}
      - export DB_REF_REFERENCE_AUTHENTICATOR_PASSWORD=$${STAGING_DB_REF_REFERENCE_AUTHENTICATOR_PASSWORD}
      - export API_REF_IMAGE=$${STAGING_API_REF_IMAGE}
      - export API_REF_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/secret.yml -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml
    when:
      event: deployment
      environment: staging

  deploy_to_prod:
    image: quay.io/ukhomeofficedigital/kd
    secrets:
      - PRODUCTION_NGINX_IMAGE
      - PRODUCTION_NGINX_TAG
      - PRODUCTION_KUBE_SERVER
      - PRODUCTION_KUBE_TOKEN
      - PRODUCTION_KUBE_NAMESPACE
      - PRODUCTION_KEYCLOAK_URL
      - PRODUCTION_KEYCLOAK_REALM
      - PRODUCTION_KEYCLOAK_PROTOCOL
      - PRODUCTION_API_REF_NAME
      - PRODUCTION_API_REF_KEYCLOAK_CLIENT_ID
      - PRODUCTION_API_REF_LOG_LEVEL
      - PRODUCTION_API_REF_PORT
      - PRODUCTION_API_REF_URL
      - PRODUCTION_API_REF_LIMIT_ROWS
      - PRODUCTION_DB_REF_PROTOCOL
      - PRODUCTION_DB_REF_PORT
      - PRODUCTION_DB_REF_HOSTNAME
      - PRODUCTION_DB_REF_OPTIONS
      - PRODUCTION_DB_REF_REFERENCE_DBNAME
      - PRODUCTION_DB_REF_REFERENCE_SCHEMA
      - PRODUCTION_DB_REF_REFERENCE_AUTHENTICATOR_USERNAME
      - PRODUCTION_DB_REF_REFERENCE_AUTHENTICATOR_PASSWORD
      - PRODUCTION_API_REF_IMAGE
    commands:
      - export NGINX_IMAGE=$${PRODUCTION_NGINX_IMAGE}
      - export NGINX_TAG=$${PRODUCTION_NGINX_TAG}
      - export KUBE_NAMESPACE=$${PRODUCTION_API_REF_KUBE_NAMESPACE}
      - export KUBE_SERVER=$${PRODUCTION_KUBE_SERVER}
      - export KUBE_TOKEN=$${PRODUCTION_KUBE_TOKEN}
      - export KEYCLOAK_URL=$${PRODUCTION_KEYCLOAK_URL}
      - export KEYCLOAK_REALM=$${PRODUCTION_KEYCLOAK_REALM}
      - export KEYCLOAK_PROTOCOL=$${PRODUCTION_KEYCLOAK_PROTOCOL}
      - export API_REF_NAME=$${PRODUCTION_API_REF_NAME}
      - export API_REF_KEYCLOAK_CLIENT_ID=$${PRODUCTION_API_REF_KEYCLOAK_CLIENT_ID}
      - export API_REF_LOG_LEVEL=$${PRODUCTION_API_REF_LOG_LEVEL}
      - export API_REF_PORT=$${PRODUCTION_API_REF_PORT}
      - export API_REF_URL=$${PRODUCTION_API_REF_URL}
      - export LIMIT_ROWS=$${PRODUCTION_API_REF_LIMIT_ROWS}
      - export DB_REF_PROTOCOL=$${PRODUCTION_DB_REF_PROTOCOL}
      - export DB_REF_PORT=$${PRODUCTION_DB_REF_PORT}
      - export DB_REF_HOSTNAME=$${PRODUCTION_DB_REF_HOSTNAME}
      - export DB_REF_OPTIONS=$${PRODUCTION_DB_REF_OPTIONS}
      - export DB_REF_REFERENCE_DBNAME=$${PRODUCTION_DB_REF_REFERENCE_DBNAME}
      - export DB_REF_REFERENCE_SCHEMA=$${PRODUCTION_DB_REF_REFERENCE_SCHEMA}
      - export DB_REF_REFERENCE_AUTHENTICATOR_USERNAME=$${PRODUCTION_DB_REF_REFERENCE_AUTHENTICATOR_USERNAME}
      - export DB_REF_REFERENCE_AUTHENTICATOR_PASSWORD=$${PRODUCTION_DB_REF_REFERENCE_AUTHENTICATOR_PASSWORD}
      - export API_REF_IMAGE=$${PRODUCTION_API_REF_IMAGE}
      - export API_REF_TAG=$${DRONE_COMMIT_SHA}
      - kd --insecure-skip-tls-verify -f kube/secret.yml -f kube/deployment.yml -f kube/service.yml -f kube/ingress.yml -f kube/network-policy.yml
    when:
      event: deployment
      environment: production

  notify:
    image: plugins/slack
    secrets: [ SLACK_WEBHOOK ]
    channel: cop-deployments
    username: Drone Build Watcher
    template: >
      {{#build.deployTo}}
        *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*
        {{build.link}}
      {{else}}
        *{{repo.name}} - Build {{build.number}} - Development - {{uppercase build.status}}*
        {{build.link}}
      {{/build.deployTo}}
    when:
      branch: master
      event: [ push, deployment ]
      status: [ success, failure ]
